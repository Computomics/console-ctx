{"version":3,"file":"static/js/3061.87564b05.chunk.js","mappings":"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","sources":["screens/Console/Support/Profile.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { Button, PageLayout, FormLayout, Box, Checkbox, InputLabel } from \"mds\";\nimport { wsProtocol } from \"../../../utils/wsUtils\";\nimport { useAppDispatch } from \"../../../store\";\nimport { setHelpName } from \"../../../systemSlice\";\nimport PageHeaderWrapper from \"../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport HelpMenu from \"../HelpMenu\";\n\nvar socket: any = null;\n\nconst Profile = () => {\n  const [profilingStarted, setProfilingStarted] = useState<boolean>(false);\n  const [types, setTypes] = useState<string[]>([\n    \"cpu\",\n    \"mem\",\n    \"block\",\n    \"mutex\",\n    \"goroutines\",\n  ]);\n  const typesList = [\n    { label: \"cpu\", value: \"cpu\" },\n    { label: \"mem\", value: \"mem\" },\n    { label: \"block\", value: \"block\" },\n    { label: \"mutex\", value: \"mutex\" },\n    { label: \"goroutines\", value: \"goroutines\" },\n  ];\n\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    let newArr: string[] = [];\n    if (types.indexOf(e.target.value) > -1) {\n      newArr = types.filter((type) => type !== e.target.value);\n    } else {\n      newArr = [...types, e.target.value];\n    }\n    setTypes(newArr);\n  };\n\n  const startProfiling = () => {\n    const typeString = types.join(\",\");\n\n    const url = new URL(window.location.toString());\n    const isDev = process.env.NODE_ENV === \"development\";\n    const port = isDev ? \"9090\" : url.port;\n\n    // check if we are using base path, if not this always is `/`\n    const baseLocation = new URL(document.baseURI);\n    const baseUrl = baseLocation.pathname;\n\n    const wsProt = wsProtocol(url.protocol);\n    socket = new WebSocket(\n      `${wsProt}://${url.hostname}:${port}${baseUrl}ws/profile?types=${typeString}`,\n    );\n\n    if (socket !== null) {\n      socket.onopen = () => {\n        setProfilingStarted(true);\n        socket.send(\"ok\");\n      };\n      socket.onmessage = (message: MessageEvent) => {\n        // process received message\n        let response = new Blob([message.data], { type: \"application/zip\" });\n        let filename = \"profile.zip\";\n        setProfilingStarted(false);\n        var link = document.createElement(\"a\");\n        link.href = window.URL.createObjectURL(response);\n        link.download = filename;\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      };\n      socket.onclose = () => {\n        console.log(\"connection closed by server\");\n        setProfilingStarted(false);\n      };\n      return () => {\n        socket.close(1000);\n        console.log(\"closing websockets\");\n        setProfilingStarted(false);\n      };\n    }\n  };\n\n  const stopProfiling = () => {\n    socket.close(1000);\n    setProfilingStarted(false);\n  };\n\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(setHelpName(\"profile\"));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <Fragment>\n      <PageHeaderWrapper label=\"Profile\" actions={<HelpMenu />} />\n      <PageLayout>\n        <FormLayout>\n          <Box\n            sx={{\n              display: \"flex\",\n              gap: 10,\n              \"& div\": { width: \"initial\" },\n              \"& .inputItem:not(:last-of-type)\": { marginBottom: 0 },\n            }}\n          >\n            <InputLabel noMinWidth>Types to profile:</InputLabel>\n            {typesList.map((t) => (\n              <Checkbox\n                checked={types.indexOf(t.value) > -1}\n                disabled={profilingStarted}\n                key={`checkbox-${t.label}`}\n                id={`checkbox-${t.label}`}\n                label={t.label}\n                name={`checkbox-${t.label}`}\n                onChange={onCheckboxClick}\n                value={t.value}\n              />\n            ))}\n          </Box>\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginTop: 24,\n              gap: 10,\n            }}\n          >\n            <Button\n              id={\"start-profiling\"}\n              type=\"submit\"\n              variant={\"callAction\"}\n              disabled={profilingStarted || types.length < 1}\n              onClick={() => {\n                startProfiling();\n              }}\n              label={\"Start Profiling\"}\n            />\n            <Button\n              id={\"stop-profiling\"}\n              type=\"submit\"\n              variant=\"callAction\"\n              color=\"primary\"\n              disabled={!profilingStarted}\n              onClick={() => {\n                stopProfiling();\n              }}\n              label={\"Stop Profiling\"}\n            />\n          </Box>\n        </FormLayout>\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default Profile;\n"],"names":["socket","Profile","profilingStarted","setProfilingStarted","useState","types","setTypes","onCheckboxClick","e","newArr","indexOf","target","value","filter","type","dispatch","useAppDispatch","useEffect","setHelpName","_jsxs","Fragment","children","_jsx","PageHeaderWrapper","label","actions","HelpMenu","PageLayout","FormLayout","Box","sx","display","gap","width","marginBottom","InputLabel","noMinWidth","map","t","Checkbox","checked","disabled","id","concat","name","onChange","justifyContent","marginTop","Button","variant","length","onClick","startProfiling","typeString","join","url","URL","window","location","toString","port","baseUrl","document","baseURI","pathname","wsProt","wsProtocol","protocol","WebSocket","hostname","onopen","send","onmessage","message","response","Blob","data","link","createElement","href","createObjectURL","download","body","appendChild","click","removeChild","onclose","console","log","color","close"],"sourceRoot":""}