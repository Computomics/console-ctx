{"version":3,"file":"static/js/5064.618e2411.chunk.js","mappings":"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","sources":["screens/Console/Common/FormComponents/InputUnitMenu/InputUnitMenu.tsx","screens/Console/Buckets/ListBuckets/BulkLifecycleModal.tsx","screens/Console/Buckets/ListBuckets/BucketListItem.tsx","screens/Console/Buckets/ListBuckets/BulkReplicationModal.tsx","screens/Console/Buckets/ListBuckets/ListBuckets.tsx","screens/Console/Common/ModalWrapper/ModalWrapper.tsx","screens/Console/Common/FormComponents/QueryMultiSelector/QueryMultiSelector.tsx"],"sourcesContent":["// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment } from \"react\";\nimport { DropdownSelector, SelectorType } from \"mds\";\nimport styled from \"styled-components\";\nimport get from \"lodash/get\";\n\ninterface IInputUnitBox {\n  id: string;\n  unitSelected: string;\n  unitsList: SelectorType[];\n  disabled?: boolean;\n  onUnitChange?: (newValue: string) => void;\n}\n\nconst UnitMenuButton = styled.button(({ theme }) => ({\n  border: `1px solid ${get(theme, \"borderColor\", \"#E2E2E2\")}`,\n  borderRadius: 3,\n  color: get(theme, \"secondaryText\", \"#5B5C5C\"),\n  backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  fontSize: 12,\n}));\n\nconst InputUnitMenu = ({\n  id,\n  unitSelected,\n  unitsList,\n  disabled = false,\n  onUnitChange,\n}: IInputUnitBox) => {\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n  const open = Boolean(anchorEl);\n  const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleClose = (newUnit: string) => {\n    setAnchorEl(null);\n    if (newUnit !== \"\" && onUnitChange) {\n      onUnitChange(newUnit);\n    }\n  };\n\n  return (\n    <Fragment>\n      <UnitMenuButton\n        id={`${id}-button`}\n        aria-controls={`${id}-menu`}\n        aria-haspopup=\"true\"\n        aria-expanded={open ? \"true\" : undefined}\n        onClick={handleClick}\n        disabled={disabled}\n        type={\"button\"}\n      >\n        {unitSelected}\n      </UnitMenuButton>\n      <DropdownSelector\n        id={\"upload-main-menu\"}\n        options={unitsList}\n        selectedOption={\"\"}\n        onSelect={(value) => handleClose(value)}\n        hideTriggerAction={() => {\n          handleClose(\"\");\n        }}\n        open={open}\n        anchorEl={anchorEl}\n        anchorOrigin={\"end\"}\n      />\n    </Fragment>\n  );\n};\n\nexport default InputUnitMenu;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2022 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  CheckCircleIcon,\n  FormLayout,\n  Grid,\n  InputBox,\n  RadioGroup,\n  ReadBox,\n  Select,\n  Switch,\n  Tooltip,\n  WarnIcon,\n  Wizard,\n} from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport QueryMultiSelector from \"../../Common/FormComponents/QueryMultiSelector/QueryMultiSelector\";\nimport { ITiersDropDown } from \"../types\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { MultiLifecycleResult } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  buckets: string[];\n}\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  buckets,\n}: IBulkReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [loadingTiers, setLoadingTiers] = useState<boolean>(true);\n  const [tiersList, setTiersList] = useState<ITiersDropDown[]>([]);\n  const [prefix, setPrefix] = useState(\"\");\n  const [tags, setTags] = useState<string>(\"\");\n  const [storageClass, setStorageClass] = useState(\"\");\n  const [NCTransitionSC, setNCTransitionSC] = useState(\"\");\n  const [expiredObjectDM, setExpiredObjectDM] = useState<boolean>(false);\n  const [expiredAllVersionsDM, setExpiredAllVersionsDM] =\n    useState<boolean>(false);\n  const [NCExpirationDays, setNCExpirationDays] = useState<string>(\"0\");\n  const [NCTransitionDays, setNCTransitionDays] = useState<string>(\"0\");\n  const [ilmType, setIlmType] = useState<\"expiry\" | \"transition\">(\"expiry\");\n  const [expiryDays, setExpiryDays] = useState<string>(\"0\");\n  const [transitionDays, setTransitionDays] = useState<string>(\"0\");\n  const [isFormValid, setIsFormValid] = useState<boolean>(false);\n  const [results, setResults] = useState<MultiLifecycleResult | null>(null);\n\n  useEffect(() => {\n    if (loadingTiers) {\n      api.admin\n        .tiersListNames()\n        .then((res) => {\n          const tiersList: string[] | null = get(res.data, \"items\", []);\n\n          if (tiersList !== null && tiersList.length >= 1) {\n            const objList = tiersList.map((tierName: string) => {\n              return { label: tierName, value: tierName };\n            });\n\n            setTiersList(objList);\n            if (objList.length > 0) {\n              setStorageClass(objList[0].value);\n            }\n          }\n          setLoadingTiers(false);\n        })\n        .catch((err) => {\n          setLoadingTiers(false);\n          dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n        });\n    }\n  }, [dispatch, loadingTiers]);\n\n  useEffect(() => {\n    let valid = true;\n\n    if (ilmType !== \"expiry\") {\n      if (storageClass === \"\") {\n        valid = false;\n      }\n    }\n    setIsFormValid(valid);\n  }, [ilmType, expiryDays, transitionDays, storageClass]);\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <Box\n            sx={{\n              paddingTop: 5,\n              color: \"#42C91A\",\n            }}\n          >\n            <CheckCircleIcon />\n          </Box>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <Box\n              sx={{\n                paddingTop: 5,\n                color: \"#C72C48\",\n              }}\n            >\n              <Tooltip tooltip={errString} placement=\"top\">\n                <WarnIcon />\n              </Tooltip>\n            </Box>\n          );\n        }\n    }\n    return null;\n  };\n\n  const createLifecycleRules = (to: any) => {\n    let rules = {};\n\n    if (ilmType === \"expiry\") {\n      let expiry = {\n        expiry_days: parseInt(expiryDays),\n      };\n\n      rules = {\n        ...expiry,\n        noncurrentversion_expiration_days: parseInt(NCExpirationDays),\n      };\n    } else {\n      let transition = {\n        transition_days: parseInt(transitionDays),\n      };\n\n      rules = {\n        ...transition,\n        noncurrentversion_transition_days: parseInt(NCTransitionDays),\n        noncurrentversion_transition_storage_class: NCTransitionSC,\n        storage_class: storageClass,\n      };\n    }\n\n    const lifecycleInsert = {\n      buckets,\n      type: ilmType,\n      prefix,\n      tags,\n      expired_object_delete_marker: expiredObjectDM,\n      expired_object_delete_all: expiredAllVersionsDM,\n      ...rules,\n    };\n\n    api.buckets\n      .addMultiBucketLifecycle(lifecycleInsert)\n      .then((res) => {\n        setAddLoading(false);\n        setResults(res.data);\n        to(\"++\");\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Lifecycle to multiple buckets\"\n    >\n      <Wizard\n        loadingStep={addLoading || loadingTiers}\n        wizardSteps={[\n          {\n            label: \"Lifecycle Configuration\",\n            componentRender: (\n              <Fragment>\n                <FormLayout withBorders={false} containerPadding={false}>\n                  <Grid item xs={12}>\n                    <ReadBox\n                      label=\"Local Buckets to replicate\"\n                      sx={{ maxWidth: \"440px\", width: \"100%\" }}\n                    >\n                      {buckets.join(\", \")}\n                    </ReadBox>\n                  </Grid>\n                  <h4>Remote Endpoint Configuration</h4>\n                  <fieldset className={\"inputItem\"}>\n                    <legend>Lifecycle Configuration</legend>\n                    <RadioGroup\n                      currentValue={ilmType}\n                      id=\"quota_type\"\n                      name=\"quota_type\"\n                      label=\"ILM Rule\"\n                      onChange={(e: React.ChangeEvent<{ value: unknown }>) => {\n                        setIlmType(e.target.value as \"expiry\" | \"transition\");\n                      }}\n                      selectorOptions={[\n                        { value: \"expiry\", label: \"Expiry\" },\n                        { value: \"transition\", label: \"Transition\" },\n                      ]}\n                    />\n                    {ilmType === \"expiry\" ? (\n                      <Fragment>\n                        <InputBox\n                          type=\"number\"\n                          id=\"expiry_days\"\n                          name=\"expiry_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setExpiryDays(e.target.value);\n                          }}\n                          label=\"Expiry Days\"\n                          value={expiryDays}\n                          min=\"0\"\n                        />\n                        <InputBox\n                          type=\"number\"\n                          id=\"noncurrentversion_expiration_days\"\n                          name=\"noncurrentversion_expiration_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setNCExpirationDays(e.target.value);\n                          }}\n                          label=\"Non-current Expiration Days\"\n                          value={NCExpirationDays}\n                          min=\"0\"\n                        />\n                      </Fragment>\n                    ) : (\n                      <Fragment>\n                        <InputBox\n                          type=\"number\"\n                          id=\"transition_days\"\n                          name=\"transition_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setTransitionDays(e.target.value);\n                          }}\n                          label=\"Transition Days\"\n                          value={transitionDays}\n                          min=\"0\"\n                        />\n                        <InputBox\n                          type=\"number\"\n                          id=\"noncurrentversion_transition_days\"\n                          name=\"noncurrentversion_transition_days\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setNCTransitionDays(e.target.value);\n                          }}\n                          label=\"Non-current Transition Days\"\n                          value={NCTransitionDays}\n                          min=\"0\"\n                        />\n                        <InputBox\n                          id=\"noncurrentversion_t_SC\"\n                          name=\"noncurrentversion_t_SC\"\n                          onChange={(\n                            e: React.ChangeEvent<HTMLInputElement>,\n                          ) => {\n                            setNCTransitionSC(e.target.value);\n                          }}\n                          placeholder=\"Set Non-current Version Transition Storage Class\"\n                          label=\"Non-current Version Transition Storage Class\"\n                          value={NCTransitionSC}\n                        />\n                        <Select\n                          label=\"Storage Class\"\n                          id=\"storage_class\"\n                          name=\"storage_class\"\n                          value={storageClass}\n                          onChange={(value) => {\n                            setStorageClass(value);\n                          }}\n                          options={tiersList}\n                        />\n                      </Fragment>\n                    )}\n                  </fieldset>\n                  <fieldset className={\"inputItem\"}>\n                    <legend>File Configuration</legend>\n                    <InputBox\n                      id=\"prefix\"\n                      name=\"prefix\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        setPrefix(e.target.value);\n                      }}\n                      label=\"Prefix\"\n                      value={prefix}\n                    />\n                    <QueryMultiSelector\n                      name=\"tags\"\n                      label=\"Tags\"\n                      elements={tags}\n                      onChange={(vl: string) => {\n                        setTags(vl);\n                      }}\n                      keyPlaceholder=\"Tag Key\"\n                      valuePlaceholder=\"Tag Value\"\n                      withBorder\n                    />\n                    <Switch\n                      value=\"expired_delete_marker\"\n                      id=\"expired_delete_marker\"\n                      name=\"expired_delete_marker\"\n                      checked={expiredObjectDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredObjectDM(event.target.checked);\n                      }}\n                      label={\"Expired Object Delete Marker\"}\n                    />\n                    <Switch\n                      value=\"expired_delete_all\"\n                      id=\"expired_delete_all\"\n                      name=\"expired_delete_all\"\n                      checked={expiredAllVersionsDM}\n                      onChange={(\n                        event: React.ChangeEvent<HTMLInputElement>,\n                      ) => {\n                        setExpiredAllVersionsDM(event.target.checked);\n                      }}\n                      label={\"Expired All Versions\"}\n                    />\n                  </fieldset>\n                </FormLayout>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Create Rules\",\n                enabled: !loadingTiers && !addLoading && isFormValid,\n                action: createLifecycleRules,\n              },\n            ],\n          },\n          {\n            label: \"Results\",\n            componentRender: (\n              <Fragment>\n                <h3>Multi Bucket lifecycle Assignments Results</h3>\n                <Grid container>\n                  <Grid item xs={12}>\n                    <h4>Buckets Results</h4>\n                    {results?.results?.map((resultItem) => {\n                      return (\n                        <Box\n                          sx={{\n                            display: \"grid\",\n                            gridTemplateColumns: \"45px auto\",\n                            alignItems: \"center\",\n                            justifyContent: \"stretch\",\n                          }}\n                        >\n                          {LogoToShow({ errString: resultItem.error || \"\" })}\n                          <span>{resultItem.bucketName}</span>\n                        </Box>\n                      );\n                    })}\n                  </Grid>\n                </Grid>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Done\",\n                enabled: !addLoading,\n                action: () => closeModalAndRefresh(true),\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nexport default AddBulkReplicationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { Fragment, useState } from \"react\";\nimport get from \"lodash/get\";\nimport styled from \"styled-components\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport {\n  Box,\n  breakPoints,\n  BucketsIcon,\n  Checkbox,\n  Grid,\n  HelpTip,\n  ReportedUsageIcon,\n  TotalObjectsIcon,\n} from \"mds\";\nimport {\n  calculateBytes,\n  niceBytes,\n  prettyNumber,\n} from \"../../../../common/utils\";\nimport {\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { hasPermission } from \"../../../../common/SecureComponent\";\nimport { Bucket } from \"../../../../api/consoleApi\";\nimport { usageClarifyingContent } from \"screens/Console/Dashboard/BasicDashboard/ReportedUsage\";\n\nconst BucketItemMain = styled.div(({ theme }) => ({\n  border: `${get(theme, \"borderColor\", \"#eaeaea\")} 1px solid`,\n  borderRadius: 3,\n  padding: 15,\n  cursor: \"pointer\",\n  \"&.disabled\": {\n    backgroundColor: get(theme, \"signalColors.danger\", \"red\"),\n  },\n  \"&:hover\": {\n    backgroundColor: get(theme, \"boxBackground\", \"#FBFAFA\"),\n  },\n  \"& .bucketTitle\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-start\",\n    gap: 10,\n    \"& h1\": {\n      padding: 0,\n      margin: 0,\n      marginBottom: 5,\n      fontSize: 22,\n      color: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n      [`@media (max-width: ${breakPoints.md}px)`]: {\n        marginBottom: 0,\n      },\n    },\n  },\n  \"& .bucketDetails\": {\n    display: \"flex\",\n    gap: 40,\n    \"& span\": {\n      fontSize: 14,\n    },\n    [`@media (max-width: ${breakPoints.md}px)`]: {\n      flexFlow: \"column-reverse\",\n      gap: 5,\n    },\n  },\n  \"& .bucketMetrics\": {\n    display: \"flex\",\n    alignItems: \"center\",\n    marginTop: 20,\n    gap: 25,\n    borderTop: `${get(theme, \"borderColor\", \"#E2E2E2\")} 1px solid`,\n    paddingTop: 20,\n    \"& svg.bucketIcon\": {\n      color: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n      fill: get(theme, \"screenTitle.iconColor\", \"#07193E\"),\n    },\n    \"& .metric\": {\n      \"& .min-icon\": {\n        color: get(theme, \"fontColor\", \"#000\"),\n        width: 13,\n        marginRight: 5,\n      },\n    },\n    \"& .metricLabel\": {\n      fontSize: 14,\n      fontWeight: \"bold\",\n      color: get(theme, \"fontColor\", \"#000\"),\n    },\n    \"& .metricText\": {\n      fontSize: 24,\n      fontWeight: \"bold\",\n    },\n    \"& .unit\": {\n      fontSize: 12,\n      fontWeight: \"normal\",\n    },\n    [`@media (max-width: ${breakPoints.md}px)`]: {\n      marginTop: 8,\n      paddingTop: 8,\n    },\n  },\n}));\n\ninterface IBucketListItem {\n  bucket: Bucket;\n  onSelect: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  selected: boolean;\n  bulkSelect: boolean;\n}\n\nconst BucketListItem = ({\n  bucket,\n  onSelect,\n  selected,\n  bulkSelect,\n}: IBucketListItem) => {\n  const navigate = useNavigate();\n\n  const [clickOverride, setClickOverride] = useState<boolean>(false);\n\n  const usage = niceBytes(`${bucket.size}` || \"0\");\n  const usageScalar = usage.split(\" \")[0];\n  const usageUnit = usage.split(\" \")[1];\n\n  const quota = get(bucket, \"details.quota.quota\", \"0\");\n  const quotaForString = calculateBytes(quota, true, false);\n\n  const manageAllowed =\n    hasPermission(bucket.name, IAM_PERMISSIONS[IAM_ROLES.BUCKET_ADMIN]) &&\n    false;\n\n  const accessToStr = (bucket: Bucket): string => {\n    if (bucket.rw_access?.read && !bucket.rw_access?.write) {\n      return \"R\";\n    } else if (!bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"W\";\n    } else if (bucket.rw_access?.read && bucket.rw_access?.write) {\n      return \"R/W\";\n    }\n    return \"\";\n  };\n  const onCheckboxClick = (e: React.ChangeEvent<HTMLInputElement>) => {\n    onSelect(e);\n  };\n\n  return (\n    <BucketItemMain\n      onClick={() => {\n        !clickOverride && navigate(`/buckets/${bucket.name}/admin`);\n      }}\n      id={`manageBucket-${bucket.name}`}\n      className={`bucket-item ${manageAllowed ? \"disabled\" : \"\"}`}\n    >\n      <Box className={\"bucketTitle\"}>\n        {bulkSelect && (\n          <Box\n            onClick={(e) => {\n              e.stopPropagation();\n            }}\n          >\n            <Checkbox\n              checked={selected}\n              id={`select-${bucket.name}`}\n              label={\"\"}\n              name={`select-${bucket.name}`}\n              onChange={onCheckboxClick}\n              value={bucket.name}\n            />\n          </Box>\n        )}\n        <h1>\n          {bucket.name} {manageAllowed}\n        </h1>\n      </Box>\n      <Box className={\"bucketDetails\"}>\n        <span id={`created-${bucket.name}`}>\n          <strong>Created:</strong>{\" \"}\n          {bucket.creation_date\n            ? new Date(bucket.creation_date).toString()\n            : \"n/a\"}\n        </span>\n        <span id={`access-${bucket.name}`}>\n          <strong>Access:</strong> {accessToStr(bucket)}\n        </span>\n      </Box>\n      <Box className={\"bucketMetrics\"}>\n        <Link to={`/buckets/${bucket.name}/admin`}>\n          <BucketsIcon\n            className={\"bucketIcon\"}\n            style={{\n              height: 48,\n              width: 48,\n            }}\n          />\n        </Link>\n\n        <Grid\n          item\n          className={\"metric\"}\n          onMouseEnter={() =>\n            bucket.details?.versioning && setClickOverride(true)\n          }\n          onMouseLeave={() =>\n            bucket.details?.versioning && setClickOverride(false)\n          }\n        >\n          {bucket.details?.versioning && (\n            <HelpTip content={usageClarifyingContent} placement=\"top\">\n              <ReportedUsageIcon />{\" \"}\n            </HelpTip>\n          )}\n          {!bucket.details?.versioning && <ReportedUsageIcon />}\n          <span className={\"metricLabel\"}>Usage</span>\n          <div className={\"metricText\"}>\n            {usageScalar}\n            <span className={\"unit\"}>{usageUnit}</span>\n            {quota !== \"0\" && (\n              <Fragment>\n                {\" \"}\n                / {quotaForString.total}\n                <span className={\"unit\"}>{quotaForString.unit}</span>\n              </Fragment>\n            )}\n          </div>\n        </Grid>\n\n        <Grid item className={\"metric\"}>\n          <TotalObjectsIcon />\n          <span className={\"metricLabel\"}>Objects</span>\n          <div className={\"metricText\"}>\n            {bucket.objects ? prettyNumber(bucket.objects) : 0}\n          </div>\n        </Grid>\n      </Box>\n    </BucketItemMain>\n  );\n};\n\nexport default BucketListItem;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport {\n  Box,\n  CheckCircleIcon,\n  FormLayout,\n  InputBox,\n  ReadBox,\n  Select,\n  Switch,\n  Tooltip,\n  WarnIcon,\n  Wizard,\n} from \"mds\";\nimport get from \"lodash/get\";\nimport ModalWrapper from \"../../Common/ModalWrapper/ModalWrapper\";\nimport { getBytes, k8sScalarUnitsExcluding } from \"../../../../common/utils\";\nimport InputUnitMenu from \"../../Common/FormComponents/InputUnitMenu/InputUnitMenu\";\nimport { setModalErrorSnackMessage } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { api } from \"api\";\nimport { MultiBucketResponseItem } from \"api/consoleApi\";\nimport { errorToHandler } from \"api/errors\";\nimport { SelectorTypes } from \"../../../../common/types\";\n\ninterface IBulkReplicationModal {\n  open: boolean;\n  closeModalAndRefresh: (clearSelection: boolean) => any;\n  buckets: string[];\n}\n\nconst AddBulkReplicationModal = ({\n  open,\n  closeModalAndRefresh,\n  buckets,\n}: IBulkReplicationModal) => {\n  const dispatch = useAppDispatch();\n  const [bucketsToAlter, setBucketsToAlter] = useState<string[]>([]);\n  const [addLoading, setAddLoading] = useState<boolean>(false);\n  const [externalLoading, setExternalLoading] = useState<boolean>(false);\n  const [accessKey, setAccessKey] = useState<string>(\"\");\n  const [secretKey, setSecretKey] = useState<string>(\"\");\n  const [targetURL, setTargetURL] = useState<string>(\"\");\n  const [region, setRegion] = useState<string>(\"\");\n  const [useTLS, setUseTLS] = useState<boolean>(true);\n  const [replicationMode, setReplicationMode] = useState<\"async\" | \"sync\">(\n    \"async\",\n  );\n  const [bandwidthScalar, setBandwidthScalar] = useState<string>(\"100\");\n  const [bandwidthUnit, setBandwidthUnit] = useState<string>(\"Gi\");\n  const [healthCheck, setHealthCheck] = useState<string>(\"60\");\n  const [relationBuckets, setRelationBuckets] = useState<string[]>([]);\n  const [remoteBucketsOpts, setRemoteBucketOpts] = useState<string[]>([]);\n  const [responseItem, setResponseItem] = useState<\n    MultiBucketResponseItem[] | undefined\n  >([]);\n\n  const optionsForBucketsDrop: SelectorTypes[] = remoteBucketsOpts.map(\n    (remoteBucketName: string) => {\n      return {\n        label: remoteBucketName,\n        value: remoteBucketName,\n      };\n    },\n  );\n\n  useEffect(() => {\n    if (relationBuckets.length === 0) {\n      const bucketsAlter: string[] = [];\n      const relationBucketsAlter: string[] = [];\n\n      buckets.forEach((item: string) => {\n        bucketsAlter.push(item);\n        relationBucketsAlter.push(\"\");\n      });\n\n      setRelationBuckets(relationBucketsAlter);\n      setBucketsToAlter(bucketsAlter);\n    }\n  }, [buckets, relationBuckets.length]);\n\n  const addRecord = () => {\n    setAddLoading(true);\n    const replicate = bucketsToAlter.map((bucketName, index) => {\n      return {\n        originBucket: bucketName,\n        destinationBucket: relationBuckets[index],\n      };\n    });\n\n    const endURL = `${useTLS ? \"https://\" : \"http://\"}${targetURL}`;\n    const hc = parseInt(healthCheck);\n\n    const remoteBucketsInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: endURL,\n      region: region,\n      bucketsRelation: replicate,\n      syncMode: replicationMode,\n      bandwidth:\n        replicationMode === \"async\"\n          ? parseInt(getBytes(bandwidthScalar, bandwidthUnit, true))\n          : 0,\n      healthCheckPeriod: hc,\n    };\n\n    api.bucketsReplication\n      .setMultiBucketReplication(remoteBucketsInfo)\n      .then((response) => {\n        setAddLoading(false);\n\n        const states = response.data.replicationState;\n        setResponseItem(states);\n\n        const filterErrors = states?.filter(\n          (itm) => itm.errorString && itm.errorString !== \"\",\n        );\n\n        if (filterErrors?.length === 0) {\n          closeModalAndRefresh(true);\n        } else {\n          setTimeout(() => {\n            removeSuccessItems(states);\n          }, 500);\n        }\n      })\n      .catch((err) => {\n        setAddLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const retrieveRemoteBuckets = (\n    wizardPageJump: (page: number | string) => void,\n  ) => {\n    const remoteConnectInfo = {\n      accessKey: accessKey,\n      secretKey: secretKey,\n      targetURL: targetURL,\n      useTLS,\n    };\n    setExternalLoading(true);\n\n    api.listExternalBuckets\n      .listExternalBuckets(remoteConnectInfo)\n      .then((res) => {\n        const buckets = get(res.data, \"buckets\", []);\n\n        if (buckets && buckets.length > 0) {\n          const arrayReplaceBuckets = buckets.map((element: any) => {\n            return element.name;\n          });\n\n          setRemoteBucketOpts(arrayReplaceBuckets);\n        }\n\n        wizardPageJump(\"++\");\n        setExternalLoading(false);\n      })\n      .catch((err) => {\n        setExternalLoading(false);\n        dispatch(setModalErrorSnackMessage(errorToHandler(err.error)));\n      });\n  };\n\n  const stateOfItem = (initialBucket: string) => {\n    if (responseItem && responseItem.length > 0) {\n      const bucketResponse = responseItem.find(\n        (item) => item.originBucket === initialBucket,\n      );\n\n      if (bucketResponse) {\n        const errString = get(bucketResponse, \"errorString\", \"\");\n\n        if (errString) {\n          return errString;\n        }\n\n        return \"\";\n      }\n    }\n    return \"n/a\";\n  };\n\n  const LogoToShow = ({ errString }: { errString: string }) => {\n    switch (errString) {\n      case \"\":\n        return (\n          <Box\n            sx={{\n              color: \"#42C91A\",\n            }}\n          >\n            <CheckCircleIcon />\n          </Box>\n        );\n      case \"n/a\":\n        return null;\n      default:\n        if (errString) {\n          return (\n            <Box\n              sx={{\n                color: \"#C72C48\",\n              }}\n            >\n              <Tooltip tooltip={errString} placement=\"top\">\n                <WarnIcon />\n              </Tooltip>\n            </Box>\n          );\n        }\n    }\n    return null;\n  };\n\n  const updateItem = (indexItem: number, value: string) => {\n    const updatedList = [...relationBuckets];\n    updatedList[indexItem] = value;\n    setRelationBuckets(updatedList);\n  };\n\n  const itemDisplayBulk = (indexItem: number) => {\n    if (remoteBucketsOpts.length > 0) {\n      return (\n        <Fragment>\n          <Select\n            label=\"\"\n            id={`assign-bucket-${indexItem}`}\n            name={`assign-bucket-${indexItem}`}\n            value={relationBuckets[indexItem]}\n            onChange={(value) => {\n              updateItem(indexItem, value);\n            }}\n            options={optionsForBucketsDrop}\n            disabled={addLoading}\n          />\n        </Fragment>\n      );\n    }\n    return (\n      <Fragment>\n        <InputBox\n          id={`assign-bucket-${indexItem}`}\n          name={`assign-bucket-${indexItem}`}\n          label=\"\"\n          onChange={(event: React.ChangeEvent<HTMLInputElement>) => {\n            updateItem(indexItem, event.target.value);\n          }}\n          value={relationBuckets[indexItem]}\n          disabled={addLoading}\n        />\n      </Fragment>\n    );\n  };\n\n  const removeSuccessItems = (\n    responseItem: MultiBucketResponseItem[] | undefined,\n  ) => {\n    let newBucketsToAlter = [...bucketsToAlter];\n    let newRelationBuckets = [...relationBuckets];\n\n    responseItem?.forEach((successElement) => {\n      const errorString = get(successElement, \"errorString\", \"\");\n\n      if (!errorString || errorString === \"\") {\n        const indexToRemove = newBucketsToAlter.indexOf(\n          successElement.originBucket || \"\",\n        );\n\n        newBucketsToAlter.splice(indexToRemove, 1);\n        newRelationBuckets.splice(indexToRemove, 1);\n      }\n    });\n\n    setBucketsToAlter(newBucketsToAlter);\n    setRelationBuckets(newRelationBuckets);\n  };\n\n  return (\n    <ModalWrapper\n      modalOpen={open}\n      onClose={() => {\n        closeModalAndRefresh(false);\n      }}\n      title=\"Set Multiple Bucket Replication\"\n    >\n      <Wizard\n        loadingStep={addLoading || externalLoading}\n        wizardSteps={[\n          {\n            label: \"Remote Configuration\",\n            componentRender: (\n              <Fragment>\n                <FormLayout containerPadding={false} withBorders={false}>\n                  <ReadBox\n                    label=\"Local Buckets to replicate\"\n                    sx={{ maxWidth: \"440px\", width: \"100%\" }}\n                  >\n                    {bucketsToAlter.join(\", \")}\n                  </ReadBox>\n                  <h4>Remote Endpoint Configuration</h4>\n                  <span style={{ fontSize: 14 }}>\n                    Please avoid the use of root credentials for this feature\n                    <br />\n                    <br />\n                  </span>\n                  <InputBox\n                    id=\"accessKey\"\n                    name=\"accessKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setAccessKey(e.target.value);\n                    }}\n                    label=\"Access Key\"\n                    value={accessKey}\n                  />\n                  <InputBox\n                    id=\"secretKey\"\n                    name=\"secretKey\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setSecretKey(e.target.value);\n                    }}\n                    label=\"Secret Key\"\n                    value={secretKey}\n                  />\n                  <InputBox\n                    id=\"targetURL\"\n                    name=\"targetURL\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setTargetURL(e.target.value);\n                    }}\n                    placeholder=\"play.min.io:9000\"\n                    label=\"Target URL\"\n                    value={targetURL}\n                  />\n                  <Switch\n                    checked={useTLS}\n                    id=\"useTLS\"\n                    name=\"useTLS\"\n                    label=\"Use TLS\"\n                    onChange={(e) => {\n                      setUseTLS(e.target.checked);\n                    }}\n                    value=\"yes\"\n                  />\n                  <InputBox\n                    id=\"region\"\n                    name=\"region\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setRegion(e.target.value);\n                    }}\n                    label=\"Region\"\n                    value={region}\n                  />\n                  <Select\n                    id=\"replication_mode\"\n                    name=\"replication_mode\"\n                    onChange={(value) => {\n                      setReplicationMode(value as \"sync\" | \"async\");\n                    }}\n                    label=\"Replication Mode\"\n                    value={replicationMode}\n                    options={[\n                      { label: \"Asynchronous\", value: \"async\" },\n                      { label: \"Synchronous\", value: \"sync\" },\n                    ]}\n                  />\n                  {replicationMode === \"async\" && (\n                    <InputBox\n                      type=\"number\"\n                      id=\"bandwidth_scalar\"\n                      name=\"bandwidth_scalar\"\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                        if (e.target.validity.valid) {\n                          setBandwidthScalar(e.target.value as string);\n                        }\n                      }}\n                      label=\"Bandwidth\"\n                      value={bandwidthScalar}\n                      min=\"0\"\n                      pattern={\"[0-9]*\"}\n                      overlayObject={\n                        <InputUnitMenu\n                          id={\"quota_unit\"}\n                          onUnitChange={(newValue) => {\n                            setBandwidthUnit(newValue);\n                          }}\n                          unitSelected={bandwidthUnit}\n                          unitsList={k8sScalarUnitsExcluding([\"Ki\"])}\n                          disabled={false}\n                        />\n                      }\n                    />\n                  )}\n                  <InputBox\n                    id=\"healthCheck\"\n                    name=\"healthCheck\"\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                      setHealthCheck(e.target.value as string);\n                    }}\n                    label=\"Health Check Duration\"\n                    value={healthCheck}\n                  />\n                </FormLayout>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"custom\",\n                label: \"Next\",\n                enabled: !externalLoading,\n                action: retrieveRemoteBuckets,\n              },\n            ],\n          },\n          {\n            label: \"Bucket Assignments\",\n            componentRender: (\n              <Fragment>\n                <h3>Remote Bucket Assignments</h3>\n                <span style={{ fontSize: 14 }}>\n                  Please select / type the desired remote bucket were you want\n                  the local data to be replicated.\n                </span>\n                <Box\n                  sx={{\n                    display: \"grid\",\n                    gridTemplateColumns: \"auto auto 45px\",\n                    alignItems: \"center\",\n                    justifyContent: \"stretch\",\n                    \"& .hide\": {\n                      opacity: 0,\n                      transitionDuration: \"0.3s\",\n                    },\n                  }}\n                >\n                  {bucketsToAlter.map((bucketName: string, index: number) => {\n                    const errorItem = stateOfItem(bucketName);\n                    return (\n                      <Fragment\n                        key={`buckets-assignation-${index.toString()}-${bucketName}`}\n                      >\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {bucketName}\n                        </div>\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {itemDisplayBulk(index)}\n                        </div>\n                        <div className={errorItem === \"\" ? \"hide\" : \"\"}>\n                          {responseItem && responseItem.length > 0 && (\n                            <LogoToShow errString={errorItem} />\n                          )}\n                        </div>\n                      </Fragment>\n                    );\n                  })}\n                </Box>\n              </Fragment>\n            ),\n            buttons: [\n              {\n                type: \"back\",\n                label: \"Back\",\n                enabled: true,\n              },\n              {\n                type: \"next\",\n                label: \"Create\",\n                enabled: !addLoading,\n                action: addRecord,\n              },\n            ],\n          },\n        ]}\n        forModal\n      />\n    </ModalWrapper>\n  );\n};\n\nexport default AddBulkReplicationModal;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nimport React, { Fragment, useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  AddIcon,\n  BucketsIcon,\n  Button,\n  HelpBox,\n  LifecycleConfigIcon,\n  MultipleBucketsIcon,\n  PageLayout,\n  RefreshIcon,\n  SelectAllIcon,\n  SelectMultipleIcon,\n  Grid,\n  breakPoints,\n  ProgressBar,\n  ActionLink,\n} from \"mds\";\n\nimport { actionsTray } from \"../../Common/FormComponents/common/styleLibrary\";\nimport { SecureComponent } from \"../../../../common/SecureComponent\";\nimport {\n  CONSOLE_UI_RESOURCE,\n  IAM_PAGES,\n  IAM_PERMISSIONS,\n  IAM_ROLES,\n  IAM_SCOPES,\n  permissionTooltipHelper,\n} from \"../../../../common/SecureComponent/permissions\";\nimport { setErrorSnackMessage, setHelpName } from \"../../../../systemSlice\";\nimport { useAppDispatch } from \"../../../../store\";\nimport { useSelector } from \"react-redux\";\nimport { selFeatures } from \"../../consoleSlice\";\nimport PageHeaderWrapper from \"../../Common/PageHeaderWrapper/PageHeaderWrapper\";\nimport { api } from \"../../../../api\";\nimport { Bucket } from \"../../../../api/consoleApi\";\nimport { errorToHandler } from \"../../../../api/errors\";\nimport HelpMenu from \"../../HelpMenu\";\nimport AutoColorIcon from \"../../Common/Components/AutoColorIcon\";\nimport TooltipWrapper from \"../../Common/TooltipWrapper/TooltipWrapper\";\nimport SearchBox from \"../../Common/SearchBox\";\nimport VirtualizedList from \"../../Common/VirtualizedList/VirtualizedList\";\nimport BulkLifecycleModal from \"./BulkLifecycleModal\";\nimport hasPermission from \"../../../../common/SecureComponent/accessControl\";\nimport BucketListItem from \"./BucketListItem\";\nimport BulkReplicationModal from \"./BulkReplicationModal\";\n\nconst ListBuckets = () => {\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n\n  const [records, setRecords] = useState<Bucket[]>([]);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [filterBuckets, setFilterBuckets] = useState<string>(\"\");\n  const [selectedBuckets, setSelectedBuckets] = useState<string[]>([]);\n  const [replicationModalOpen, setReplicationModalOpen] =\n    useState<boolean>(false);\n  const [lifecycleModalOpen, setLifecycleModalOpen] = useState<boolean>(false);\n  const [canPutLifecycle, setCanPutLifecycle] = useState<boolean>(false);\n  const [bulkSelect, setBulkSelect] = useState<boolean>(false);\n\n  const features = useSelector(selFeatures);\n  const obOnly = !!features?.includes(\"object-browser-only\");\n\n  useEffect(() => {\n    dispatch(setHelpName(\"ob_bucket_list\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (loading) {\n      const fetchRecords = () => {\n        setLoading(true);\n        api.buckets.listBuckets().then((res) => {\n          if (res.data) {\n            setLoading(false);\n            setRecords(res.data.buckets || []);\n          } else if (res.error) {\n            setLoading(false);\n            dispatch(setErrorSnackMessage(errorToHandler(res.error)));\n          }\n        });\n      };\n      fetchRecords();\n    }\n  }, [loading, dispatch]);\n\n  const filteredRecords = records.filter((b: Bucket) => {\n    if (filterBuckets === \"\") {\n      return true;\n    } else {\n      return b.name.indexOf(filterBuckets) >= 0;\n    }\n  });\n\n  const hasBuckets = records.length > 0;\n\n  const selectListBuckets = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const targetD = e.target;\n    const value = targetD.value;\n    const checked = targetD.checked;\n\n    let elements: string[] = [...selectedBuckets]; // We clone the selectedBuckets array\n\n    if (checked) {\n      // If the user has checked this field we need to push this to selectedBucketsList\n      elements.push(value);\n    } else {\n      // User has unchecked this field, we need to remove it from the list\n      elements = elements.filter((element) => element !== value);\n    }\n    setSelectedBuckets(elements);\n\n    return elements;\n  };\n\n  const closeBulkReplicationModal = (unselectAll: boolean) => {\n    setReplicationModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  const closeBulkLifecycleModal = (unselectAll: boolean) => {\n    setLifecycleModalOpen(false);\n\n    if (unselectAll) {\n      setSelectedBuckets([]);\n    }\n  };\n\n  useEffect(() => {\n    var failLifecycle = false;\n    selectedBuckets.forEach((bucket: string) => {\n      hasPermission(bucket, IAM_PERMISSIONS[IAM_ROLES.BUCKET_LIFECYCLE], true)\n        ? setCanPutLifecycle(true)\n        : (failLifecycle = true);\n    });\n    failLifecycle ? setCanPutLifecycle(false) : setCanPutLifecycle(true);\n  }, [selectedBuckets]);\n\n  const renderItemLine = (index: number) => {\n    const bucket = filteredRecords[index] || null;\n    if (bucket) {\n      return (\n        <BucketListItem\n          bucket={bucket}\n          onSelect={selectListBuckets}\n          selected={selectedBuckets.includes(bucket.name)}\n          bulkSelect={bulkSelect}\n        />\n      );\n    }\n    return null;\n  };\n\n  const selectAllBuckets = () => {\n    if (selectedBuckets.length === filteredRecords.length) {\n      setSelectedBuckets([]);\n      return;\n    }\n\n    const selectAllBuckets = filteredRecords.map((bucket) => {\n      return bucket.name;\n    });\n\n    setSelectedBuckets(selectAllBuckets);\n  };\n\n  const canCreateBucket = hasPermission(\"*\", [IAM_SCOPES.S3_CREATE_BUCKET]);\n  const canListBuckets = hasPermission(\"*\", [\n    IAM_SCOPES.S3_LIST_BUCKET,\n    IAM_SCOPES.S3_ALL_LIST_BUCKET,\n  ]);\n\n  return (\n    <Fragment>\n      {replicationModalOpen && (\n        <BulkReplicationModal\n          open={replicationModalOpen}\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkReplicationModal}\n        />\n      )}\n      {lifecycleModalOpen && (\n        <BulkLifecycleModal\n          buckets={selectedBuckets}\n          closeModalAndRefresh={closeBulkLifecycleModal}\n          open={lifecycleModalOpen}\n        />\n      )}\n      {!obOnly && (\n        <PageHeaderWrapper label={\"Buckets\"} actions={<HelpMenu />} />\n      )}\n\n      <PageLayout>\n        <Grid item xs={12} sx={actionsTray.actionsTray}>\n          {obOnly && (\n            <Grid item xs>\n              <AutoColorIcon marginRight={15} marginTop={10} />\n            </Grid>\n          )}\n          {hasBuckets && (\n            <SearchBox\n              onChange={setFilterBuckets}\n              placeholder=\"Search Buckets\"\n              value={filterBuckets}\n              sx={{\n                minWidth: 380,\n                [`@media (max-width: ${breakPoints.md}px)`]: {\n                  minWidth: 220,\n                },\n              }}\n            />\n          )}\n\n          <Grid\n            item\n            xs={12}\n            sx={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"flex-end\",\n              gap: 5,\n            }}\n          >\n            {!obOnly && (\n              <Fragment>\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : bulkSelect\n                        ? \"Unselect Buckets\"\n                        : \"Select Multiple Buckets\"\n                  }\n                >\n                  <Button\n                    id={\"multiple-bucket-seection\"}\n                    onClick={() => {\n                      setBulkSelect(!bulkSelect);\n                      setSelectedBuckets([]);\n                    }}\n                    icon={<SelectMultipleIcon />}\n                    variant={bulkSelect ? \"callAction\" : \"regular\"}\n                    disabled={!hasBuckets}\n                  />\n                </TooltipWrapper>\n\n                {bulkSelect && (\n                  <TooltipWrapper\n                    tooltip={\n                      !hasBuckets\n                        ? \"\"\n                        : selectedBuckets.length === filteredRecords.length\n                          ? \"Unselect All Buckets\"\n                          : \"Select All Buckets\"\n                    }\n                  >\n                    <Button\n                      id={\"select-all-buckets\"}\n                      onClick={selectAllBuckets}\n                      icon={<SelectAllIcon />}\n                      variant={\"regular\"}\n                    />\n                  </TooltipWrapper>\n                )}\n\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : !canPutLifecycle\n                        ? permissionTooltipHelper(\n                            IAM_PERMISSIONS[IAM_ROLES.BUCKET_LIFECYCLE],\n                            \"configure lifecycle for the selected buckets\",\n                          )\n                        : selectedBuckets.length === 0\n                          ? bulkSelect\n                            ? \"Please select at least one bucket on which to configure Lifecycle\"\n                            : \"Use the Select Multiple Buckets button to choose buckets on which to configure Lifecycle\"\n                          : \"Set Lifecycle\"\n                  }\n                >\n                  <Button\n                    id={\"set-lifecycle\"}\n                    onClick={() => {\n                      setLifecycleModalOpen(true);\n                    }}\n                    icon={<LifecycleConfigIcon />}\n                    variant={\"regular\"}\n                    disabled={selectedBuckets.length === 0 || !canPutLifecycle}\n                  />\n                </TooltipWrapper>\n\n                <TooltipWrapper\n                  tooltip={\n                    !hasBuckets\n                      ? \"\"\n                      : selectedBuckets.length === 0\n                        ? bulkSelect\n                          ? \"Please select at least one bucket on which to configure Replication\"\n                          : \"Use the Select Multiple Buckets button to choose buckets on which to configure Replication\"\n                        : \"Set Replication\"\n                  }\n                >\n                  <Button\n                    id={\"set-replication\"}\n                    onClick={() => {\n                      setReplicationModalOpen(true);\n                    }}\n                    icon={<MultipleBucketsIcon />}\n                    variant={\"regular\"}\n                    disabled={selectedBuckets.length === 0}\n                  />\n                </TooltipWrapper>\n              </Fragment>\n            )}\n\n            <TooltipWrapper tooltip={\"Refresh\"}>\n              <Button\n                id={\"refresh-buckets\"}\n                onClick={() => {\n                  setLoading(true);\n                }}\n                icon={<RefreshIcon />}\n                variant={\"regular\"}\n              />\n            </TooltipWrapper>\n\n            {!obOnly && (\n              <TooltipWrapper\n                tooltip={\n                  canCreateBucket\n                    ? \"\"\n                    : permissionTooltipHelper(\n                        [IAM_SCOPES.S3_CREATE_BUCKET],\n                        \"create a bucket\",\n                      )\n                }\n              >\n                <Button\n                  id={\"create-bucket\"}\n                  onClick={() => {\n                    navigate(IAM_PAGES.ADD_BUCKETS);\n                  }}\n                  icon={<AddIcon />}\n                  variant={\"callAction\"}\n                  disabled={!canCreateBucket}\n                  label={\"Create Bucket\"}\n                />\n              </TooltipWrapper>\n            )}\n          </Grid>\n        </Grid>\n\n        {loading && <ProgressBar />}\n        {!loading && (\n          <Grid\n            item\n            xs={12}\n            sx={{\n              marginTop: 25,\n              height: \"calc(100vh - 211px)\",\n              \"&.isEmbedded\": {\n                height: \"calc(100vh - 128px)\",\n              },\n            }}\n            className={obOnly ? \"isEmbedded\" : \"\"}\n          >\n            {filteredRecords.length !== 0 && (\n              <VirtualizedList\n                rowRenderFunction={renderItemLine}\n                totalItems={filteredRecords.length}\n              />\n            )}\n            {filteredRecords.length === 0 && filterBuckets !== \"\" && (\n              <Grid container>\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"No Results\"}\n                    help={\n                      <Fragment>\n                        No buckets match the filtering condition\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n            {!hasBuckets && (\n              <Grid container>\n                <Grid item xs={8}>\n                  <HelpBox\n                    iconComponent={<BucketsIcon />}\n                    title={\"Buckets\"}\n                    help={\n                      <Fragment>\n                        MinIO uses buckets to organize objects. A bucket is\n                        similar to a folder or directory in a filesystem, where\n                        each bucket can hold an arbitrary number of objects.\n                        <br />\n                        {canListBuckets ? (\n                          \"\"\n                        ) : (\n                          <Fragment>\n                            <br />\n                            {permissionTooltipHelper(\n                              [\n                                IAM_SCOPES.S3_LIST_BUCKET,\n                                IAM_SCOPES.S3_ALL_LIST_BUCKET,\n                              ],\n                              \"view the buckets on this server\",\n                            )}\n                            <br />\n                          </Fragment>\n                        )}\n                        <SecureComponent\n                          scopes={[IAM_SCOPES.S3_CREATE_BUCKET]}\n                          resource={CONSOLE_UI_RESOURCE}\n                        >\n                          <br />\n                          To get started,&nbsp;\n                          <ActionLink\n                            onClick={() => {\n                              navigate(IAM_PAGES.ADD_BUCKETS);\n                            }}\n                          >\n                            Create a Bucket.\n                          </ActionLink>\n                        </SecureComponent>\n                      </Fragment>\n                    }\n                  />\n                </Grid>\n              </Grid>\n            )}\n          </Grid>\n        )}\n      </PageLayout>\n    </Fragment>\n  );\n};\n\nexport default ListBuckets;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ModalBox, Snackbar } from \"mds\";\nimport { CSSObject } from \"styled-components\";\nimport { AppState, useAppDispatch } from \"../../../../store\";\nimport { setModalSnackMessage } from \"../../../../systemSlice\";\nimport MainError from \"../MainError/MainError\";\n\ninterface IModalProps {\n  onClose: () => void;\n  modalOpen: boolean;\n  title: string | React.ReactNode;\n  children: any;\n  wideLimit?: boolean;\n  titleIcon?: React.ReactNode;\n  iconColor?: \"default\" | \"delete\" | \"accept\";\n  sx?: CSSObject;\n}\n\nconst ModalWrapper = ({\n  onClose,\n  modalOpen,\n  title,\n  children,\n  wideLimit = true,\n  titleIcon = null,\n  iconColor = \"default\",\n  sx,\n}: IModalProps) => {\n  const dispatch = useAppDispatch();\n  const [openSnackbar, setOpenSnackbar] = useState<boolean>(false);\n\n  const modalSnackMessage = useSelector(\n    (state: AppState) => state.system.modalSnackBar,\n  );\n\n  useEffect(() => {\n    dispatch(setModalSnackMessage(\"\"));\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (modalSnackMessage) {\n      if (modalSnackMessage.message === \"\") {\n        setOpenSnackbar(false);\n        return;\n      }\n      // Open SnackBar\n      if (modalSnackMessage.type !== \"error\") {\n        setOpenSnackbar(true);\n      }\n    }\n  }, [modalSnackMessage]);\n\n  const closeSnackBar = () => {\n    setOpenSnackbar(false);\n    dispatch(setModalSnackMessage(\"\"));\n  };\n\n  let message = \"\";\n\n  if (modalSnackMessage) {\n    message = modalSnackMessage.detailedErrorMsg;\n    if (message === \"\" || (message && message.length < 5)) {\n      message = modalSnackMessage.message;\n    }\n  }\n\n  return (\n    <ModalBox\n      onClose={onClose}\n      open={modalOpen}\n      title={title}\n      titleIcon={titleIcon}\n      widthLimit={wideLimit}\n      sx={sx}\n      iconColor={iconColor}\n    >\n      <MainError isModal={true} />\n      <Snackbar\n        onClose={closeSnackBar}\n        open={openSnackbar}\n        message={message}\n        mode={\"inline\"}\n        variant={modalSnackMessage.type === \"error\" ? \"error\" : \"default\"}\n        autoHideDuration={modalSnackMessage.type === \"error\" ? 10 : 5}\n        condensed\n      />\n      {children}\n    </ModalBox>\n  );\n};\n\nexport default ModalWrapper;\n","// This file is part of MinIO Console Server\n// Copyright (c) 2021 MinIO, Inc.\n//\n// This program is free software: you can redistribute it and/or modify\n// it under the terms of the GNU Affero General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// This program is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU Affero General Public License for more details.\n//\n// You should have received a copy of the GNU Affero General Public License\n// along with this program.  If not, see <http://www.gnu.org/licenses/>.\nimport React, {\n  ChangeEvent,\n  createRef,\n  Fragment,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n} from \"react\";\nimport get from \"lodash/get\";\nimport debounce from \"lodash/debounce\";\nimport {\n  AddIcon,\n  Box,\n  Grid,\n  HelpIcon,\n  InputBox,\n  InputLabel,\n  Tooltip,\n} from \"mds\";\n\ninterface IQueryMultiSelector {\n  elements: string;\n  name: string;\n  label: string;\n  tooltip?: string;\n  keyPlaceholder?: string;\n  valuePlaceholder?: string;\n  withBorder?: boolean;\n  onChange: (elements: string) => void;\n}\n\nconst QueryMultiSelector = ({\n  elements,\n  name,\n  label,\n  tooltip = \"\",\n  keyPlaceholder = \"\",\n  valuePlaceholder = \"\",\n  onChange,\n  withBorder = false,\n}: IQueryMultiSelector) => {\n  const [currentKeys, setCurrentKeys] = useState<string[]>([\"\"]);\n  const [currentValues, setCurrentValues] = useState<string[]>([\"\"]);\n  const bottomList = createRef<HTMLDivElement>();\n\n  // Use effect to get the initial values from props\n  useEffect(() => {\n    if (\n      currentKeys.length === 1 &&\n      currentKeys[0] === \"\" &&\n      currentValues.length === 1 &&\n      currentValues[0] === \"\" &&\n      elements &&\n      elements !== \"\"\n    ) {\n      const elementsSplit = elements.split(\"&\");\n      let keys = [];\n      let values = [];\n\n      elementsSplit.forEach((element: string) => {\n        const splittedVals = element.split(\"=\");\n        if (splittedVals.length === 2) {\n          keys.push(splittedVals[0]);\n          values.push(splittedVals[1]);\n        }\n      });\n\n      keys.push(\"\");\n      values.push(\"\");\n\n      setCurrentKeys(keys);\n      setCurrentValues(values);\n    }\n  }, [currentKeys, currentValues, elements]);\n\n  // Use effect to send new values to onChange\n  useEffect(() => {\n    const refScroll = bottomList.current;\n    if (refScroll && currentKeys.length > 1) {\n      refScroll.scrollIntoView(false);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys]);\n\n  // We avoid multiple re-renders / hang issue typing too fast\n  const firstUpdate = useRef(true);\n  useLayoutEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n      return;\n    }\n    debouncedOnChange();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currentKeys, currentValues]);\n\n  // If the last input is not empty, we add a new one\n  const addEmptyLine = () => {\n    if (\n      currentKeys[currentKeys.length - 1].trim() !== \"\" &&\n      currentValues[currentValues.length - 1].trim() !== \"\"\n    ) {\n      const keysList = [...currentKeys];\n      const valuesList = [...currentValues];\n\n      keysList.push(\"\");\n      valuesList.push(\"\");\n\n      setCurrentKeys(keysList);\n      setCurrentValues(valuesList);\n    }\n  };\n\n  // Onchange function for input box, we get the dataset-index & only update that value in the array\n  const onChangeKey = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentKeys];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentKeys(updatedElement);\n  };\n\n  const onChangeValue = (e: ChangeEvent<HTMLInputElement>) => {\n    e.persist();\n\n    let updatedElement = [...currentValues];\n    const index = get(e.target, \"dataset.index\", \"0\");\n    const indexNum = parseInt(index);\n    updatedElement[indexNum] = e.target.value;\n\n    setCurrentValues(updatedElement);\n  };\n\n  // Debounce for On Change\n  const debouncedOnChange = debounce(() => {\n    let queryString = \"\";\n\n    currentKeys.forEach((keyVal, index) => {\n      if (currentKeys[index] && currentValues[index]) {\n        let insertString = `${keyVal}=${currentValues[index]}`;\n        if (index !== 0) {\n          insertString = `&${insertString}`;\n        }\n        queryString = `${queryString}${insertString}`;\n      }\n    });\n\n    onChange(queryString);\n  }, 500);\n\n  const inputs = currentValues.map((element, index) => {\n    return (\n      <Grid\n        item\n        xs={12}\n        className={\"lineInputBoxes inputItem\"}\n        key={`query-pair-${name}-${index.toString()}`}\n      >\n        <InputBox\n          id={`${name}-key-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentKeys[index]}\n          onChange={onChangeKey}\n          index={index}\n          placeholder={keyPlaceholder}\n        />\n        <span className={\"queryDiv\"}>:</span>\n        <InputBox\n          id={`${name}-value-${index.toString()}`}\n          label={\"\"}\n          name={`${name}-${index.toString()}`}\n          value={currentValues[index]}\n          onChange={onChangeValue}\n          index={index}\n          placeholder={valuePlaceholder}\n          overlayIcon={index === currentValues.length - 1 ? <AddIcon /> : null}\n          overlayAction={() => {\n            addEmptyLine();\n          }}\n        />\n      </Grid>\n    );\n  });\n\n  return (\n    <Fragment>\n      <Grid\n        item\n        xs={12}\n        sx={{\n          \"& .lineInputBoxes\": {\n            display: \"flex\",\n          },\n          \"& .queryDiv\": {\n            alignSelf: \"center\",\n            margin: \"-15px 4px 0\",\n            fontWeight: 600,\n          },\n        }}\n        className={\"inputItem\"}\n      >\n        <InputLabel>\n          {label}\n          {tooltip !== \"\" && (\n            <Box\n              sx={{\n                marginLeft: 5,\n                display: \"flex\",\n                alignItems: \"center\",\n                \"& .min-icon\": {\n                  width: 13,\n                },\n              }}\n            >\n              <Tooltip tooltip={tooltip} placement=\"top\">\n                <HelpIcon style={{ width: 13, height: 13 }} />\n              </Tooltip>\n            </Box>\n          )}\n        </InputLabel>\n        <Box\n          withBorders={withBorder}\n          sx={{\n            padding: 15,\n            height: 150,\n            overflowY: \"auto\",\n            position: \"relative\",\n            marginTop: 15,\n          }}\n        >\n          {inputs}\n          <div ref={bottomList} />\n        </Box>\n      </Grid>\n    </Fragment>\n  );\n};\nexport default QueryMultiSelector;\n"],"names":["UnitMenuButton","styled","button","_ref","theme","border","concat","get","borderRadius","color","backgroundColor","fontSize","_ref2","id","unitSelected","unitsList","disabled","onUnitChange","anchorEl","setAnchorEl","React","open","Boolean","handleClose","newUnit","_jsxs","Fragment","children","_jsx","undefined","onClick","event","currentTarget","type","DropdownSelector","options","selectedOption","onSelect","value","hideTriggerAction","anchorOrigin","_results$results","closeModalAndRefresh","buckets","dispatch","useAppDispatch","addLoading","setAddLoading","useState","loadingTiers","setLoadingTiers","tiersList","setTiersList","prefix","setPrefix","tags","setTags","storageClass","setStorageClass","NCTransitionSC","setNCTransitionSC","expiredObjectDM","setExpiredObjectDM","expiredAllVersionsDM","setExpiredAllVersionsDM","NCExpirationDays","setNCExpirationDays","NCTransitionDays","setNCTransitionDays","ilmType","setIlmType","expiryDays","setExpiryDays","transitionDays","setTransitionDays","isFormValid","setIsFormValid","results","setResults","useEffect","api","admin","tiersListNames","then","res","data","length","objList","map","tierName","label","catch","err","setModalErrorSnackMessage","errorToHandler","error","valid","LogoToShow","errString","Box","sx","paddingTop","CheckCircleIcon","Tooltip","tooltip","placement","WarnIcon","ModalWrapper","modalOpen","onClose","title","Wizard","loadingStep","wizardSteps","componentRender","FormLayout","withBorders","containerPadding","Grid","item","xs","ReadBox","maxWidth","width","join","className","RadioGroup","currentValue","name","onChange","e","target","selectorOptions","InputBox","min","placeholder","Select","QueryMultiSelector","elements","vl","keyPlaceholder","valuePlaceholder","withBorder","Switch","checked","buttons","enabled","action","to","rules","expiry","expiry_days","parseInt","_objectSpread","noncurrentversion_expiration_days","transition","transition_days","noncurrentversion_transition_days","noncurrentversion_transition_storage_class","storage_class","lifecycleInsert","expired_object_delete_marker","expired_object_delete_all","addMultiBucketLifecycle","container","resultItem","display","gridTemplateColumns","alignItems","justifyContent","bucketName","forModal","BucketItemMain","div","padding","cursor","gap","margin","marginBottom","breakPoints","md","flexFlow","marginTop","borderTop","fill","marginRight","fontWeight","_bucket$details3","_bucket$details4","bucket","selected","bulkSelect","navigate","useNavigate","clickOverride","setClickOverride","usage","niceBytes","size","usageScalar","split","usageUnit","quota","quotaForString","calculateBytes","manageAllowed","hasPermission","IAM_PERMISSIONS","IAM_ROLES","BUCKET_ADMIN","stopPropagation","Checkbox","creation_date","Date","toString","_bucket$rw_access","_bucket$rw_access2","_bucket$rw_access3","_bucket$rw_access4","_bucket$rw_access5","_bucket$rw_access6","rw_access","read","write","accessToStr","Link","BucketsIcon","style","height","onMouseEnter","_bucket$details","details","versioning","onMouseLeave","_bucket$details2","HelpTip","content","usageClarifyingContent","ReportedUsageIcon","total","unit","TotalObjectsIcon","objects","prettyNumber","bucketsToAlter","setBucketsToAlter","externalLoading","setExternalLoading","accessKey","setAccessKey","secretKey","setSecretKey","targetURL","setTargetURL","region","setRegion","useTLS","setUseTLS","replicationMode","setReplicationMode","bandwidthScalar","setBandwidthScalar","bandwidthUnit","setBandwidthUnit","healthCheck","setHealthCheck","relationBuckets","setRelationBuckets","remoteBucketsOpts","setRemoteBucketOpts","responseItem","setResponseItem","optionsForBucketsDrop","remoteBucketName","bucketsAlter","relationBucketsAlter","forEach","push","updateItem","indexItem","updatedList","removeSuccessItems","newBucketsToAlter","newRelationBuckets","successElement","errorString","indexToRemove","indexOf","originBucket","splice","validity","pattern","overlayObject","InputUnitMenu","newValue","k8sScalarUnitsExcluding","wizardPageJump","remoteConnectInfo","listExternalBuckets","arrayReplaceBuckets","element","opacity","transitionDuration","index","errorItem","initialBucket","bucketResponse","find","stateOfItem","addRecord","replicate","destinationBucket","endURL","hc","remoteBucketsInfo","bucketsRelation","syncMode","bandwidth","getBytes","healthCheckPeriod","bucketsReplication","setMultiBucketReplication","response","states","replicationState","filterErrors","filter","itm","setTimeout","ListBuckets","records","setRecords","loading","setLoading","filterBuckets","setFilterBuckets","selectedBuckets","setSelectedBuckets","replicationModalOpen","setReplicationModalOpen","lifecycleModalOpen","setLifecycleModalOpen","canPutLifecycle","setCanPutLifecycle","setBulkSelect","features","useSelector","selFeatures","obOnly","includes","setHelpName","fetchRecords","listBuckets","setErrorSnackMessage","filteredRecords","b","hasBuckets","selectListBuckets","targetD","failLifecycle","BUCKET_LIFECYCLE","canCreateBucket","IAM_SCOPES","S3_CREATE_BUCKET","canListBuckets","S3_LIST_BUCKET","S3_ALL_LIST_BUCKET","BulkReplicationModal","unselectAll","BulkLifecycleModal","PageHeaderWrapper","actions","HelpMenu","PageLayout","actionsTray","AutoColorIcon","SearchBox","minWidth","TooltipWrapper","Button","icon","SelectMultipleIcon","variant","selectAllBuckets","SelectAllIcon","permissionTooltipHelper","LifecycleConfigIcon","MultipleBucketsIcon","RefreshIcon","IAM_PAGES","ADD_BUCKETS","AddIcon","ProgressBar","VirtualizedList","rowRenderFunction","BucketListItem","totalItems","HelpBox","iconComponent","help","SecureComponent","scopes","resource","CONSOLE_UI_RESOURCE","ActionLink","wideLimit","titleIcon","iconColor","openSnackbar","setOpenSnackbar","modalSnackMessage","state","system","modalSnackBar","setModalSnackMessage","message","detailedErrorMsg","ModalBox","widthLimit","MainError","isModal","Snackbar","closeSnackBar","mode","autoHideDuration","condensed","currentKeys","setCurrentKeys","currentValues","setCurrentValues","bottomList","createRef","elementsSplit","keys","values","splittedVals","refScroll","current","scrollIntoView","firstUpdate","useRef","useLayoutEffect","debouncedOnChange","onChangeKey","persist","updatedElement","onChangeValue","debounce","queryString","keyVal","insertString","inputs","overlayIcon","overlayAction","addEmptyLine","trim","keysList","valuesList","alignSelf","InputLabel","marginLeft","HelpIcon","overflowY","position","ref"],"sourceRoot":""}